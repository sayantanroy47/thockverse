---
// SwitchReviewLayout.astro - Specialized layout for switch reviews
import BaseLayout from './BaseLayout.astro';

interface Props {
  title?: string;
  description?: string;
  frontmatter?: {
    title: string;
    description: string;
    author: string;
    date: string;
    category: string;
    tags: string[];
    specs: {
      actuationforce: string;
      bottomoutforce: string;
      pretravel: string;
      totaltravel: string;
      sound: string;
      material: string;
      mounttype: string;
      factorylubed: string;
      housing: string;
      stemcolor: string;
    };
  };
  heroImage?: string;
}

const { frontmatter, heroImage } = Astro.props;
const title = frontmatter?.title || 'Switch Review - Thockverse';
const description = frontmatter?.description || 'Detailed mechanical switch review';

// Extract rating from content or calculate from specs (placeholder logic)
const rating = 8.5; // This would be calculated or extracted from frontmatter in real implementation
---

<BaseLayout title={title} description={description} type="article">
  <article class="max-w-4xl mx-auto">
    <!-- Breadcrumbs -->
    <nav class="breadcrumb mb-6">
      <a href="/" class="hover:text-primary-400 transition-colors duration-200">Home</a>
      <span class="breadcrumb-separator mx-2">/</span>
      <a href="/switches" class="hover:text-primary-400 transition-colors duration-200">Switches</a>
      <span class="breadcrumb-separator mx-2">/</span>
      <span class="text-primary-400">{frontmatter?.title}</span>
    </nav>

    <!-- Hero Section -->
    <div class="mb-8">
      <!-- Hero Image -->
      {heroImage && (
        <div class="relative w-full h-64 sm:h-80 lg:h-96 rounded-2xl overflow-hidden mb-6 group">
          <img 
            src={heroImage} 
            alt={frontmatter?.title}
            class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-500"
            loading="eager"
          />
          <div class="absolute inset-0 bg-gradient-to-t from-space-black/60 via-transparent to-transparent"></div>
        </div>
      )}

      <!-- Title and Rating -->
      <div class="space-y-4">
        <h1 class="text-4xl lg:text-5xl font-bold text-gradient leading-tight">
          {frontmatter?.title}
        </h1>
        
        <!-- Subtitle and Meta -->
        <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4">
          <p class="text-xl text-muted-foreground leading-relaxed max-w-2xl">
            {frontmatter?.description}
          </p>
          
          <!-- Rating Stars -->
          <div class="flex items-center space-x-2">
            <div class="flex items-center space-x-1">
              {[...Array(5)].map((_, i) => (
                <svg 
                  key={i}
                  class={`w-5 h-5 ${i < Math.floor(rating) ? 'text-yellow-400' : i < rating ? 'text-yellow-400/50' : 'text-muted-foreground'}`}
                  fill="currentColor" 
                  viewBox="0 0 20 20"
                >
                  <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"/>
                </svg>
              ))}
            </div>
            <span class="text-lg font-bold text-accent-400">{rating}</span>
          </div>
        </div>

        <!-- Author and Date -->
        <div class="flex flex-wrap items-center gap-4 text-sm text-muted-foreground">
          <div class="flex items-center space-x-2">
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"/>
            </svg>
            <span>By {frontmatter?.author}</span>
          </div>
          <div class="flex items-center space-x-2">
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
            </svg>
            <span>{new Date(frontmatter?.date || '').toLocaleDateString('en-US', { 
              year: 'numeric', 
              month: 'long', 
              day: 'numeric' 
            })}</span>
          </div>
        </div>

        <!-- Tags -->
        {frontmatter?.tags && frontmatter.tags.length > 0 && (
          <div class="flex flex-wrap gap-2">
            {frontmatter.tags.map((tag) => (
              <span class="px-3 py-1 text-xs font-medium bg-primary-500/20 text-primary-300 rounded-full border border-primary-500/30">
                {tag}
              </span>
            ))}
          </div>
        )}
      </div>
    </div>

    <!-- Switch Specifications Card -->
    {frontmatter?.specs && (
      <div class="spec-glow rounded-2xl p-6 mb-8 float-animation">
        <div class="flex items-center space-x-3 mb-6">
          <div class="w-8 h-8 bg-gradient-to-br from-primary-500 to-accent-500 rounded-lg flex items-center justify-center">
            <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"/>
            </svg>
          </div>
          <h2 class="text-2xl font-bold text-gradient">Switch Specifications</h2>
        </div>
        
        <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4">
          {Object.entries(frontmatter.specs).map(([key, value]) => (
            <div class="bg-input/50 rounded-lg p-4 hover:bg-input transition-colors duration-200">
              <div class="text-xs font-medium text-muted-foreground uppercase tracking-wider mb-1">
                {key.replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase())}
              </div>
              <div class="text-sm font-semibold text-foreground">
                {value}
              </div>
            </div>
          ))}
        </div>
      </div>
    )}

    <!-- Sound Test Player -->
    <div class="glass-dark rounded-2xl p-6 mb-8">
      <div class="flex items-center space-x-3 mb-4">
        <div class="w-8 h-8 bg-gradient-to-br from-accent-500 to-primary-500 rounded-lg flex items-center justify-center">
          <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15.536 8.464a5 5 0 010 7.072m2.828-9.9a9 9 0 010 14.142M5.586 15H4a1 1 0 01-1-1v-4a1 1 0 011-1h1.586l4.707-4.707C10.923 3.663 12 4.109 12 5v14c0 .891-1.077 1.337-1.707.707L5.586 15z"/>
          </svg>
        </div>
        <h3 class="text-xl font-bold text-foreground">Sound Test</h3>
        <div class="flex-1"></div>
        <span class="text-xs text-muted-foreground">Coming Soon</span>
      </div>
      
      <!-- Sound Test Player UI -->
      <div class="space-y-4">
        <!-- Waveform Visualizer Placeholder -->
        <div class="flex items-end justify-center space-x-1 h-16 bg-input rounded-lg p-4">
          {[...Array(40)].map((_, i) => (
            <div 
              key={i}
              class="waveform-bar bg-gradient-to-t from-primary-600 to-primary-400 rounded-t-sm"
              style={{ 
                width: '3px', 
                height: `${Math.random() * 40 + 10}px`,
                animationDelay: `${i * 0.05}s`
              }}
            ></div>
          ))}
        </div>
        
        <!-- Player Controls -->
        <div class="flex items-center justify-center space-x-4">
          <button class="p-3 rounded-full bg-primary-500/20 hover:bg-primary-500/30 transition-colors duration-200 cursor-not-allowed opacity-50">
            <svg class="w-6 h-6 text-primary-400" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM9.555 7.168A1 1 0 008 8v4a1 1 0 001.555.832l3-2a1 1 0 000-1.664l-3-2z" clip-rule="evenodd"/>
            </svg>
          </button>
          <div class="text-xs text-muted-foreground">
            Audio player will be available when sound files are added
          </div>
        </div>
      </div>
    </div>

    <!-- Article Content -->
    <div class="prose prose-lg prose-invert max-w-none">
      <slot />
    </div>

    <!-- Article Footer -->
    <div class="mt-12 pt-8 border-t border-white/10">
      <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4">
        <!-- Social Sharing -->
        <div class="flex items-center space-x-4">
          <span class="text-sm text-muted-foreground">Share this review:</span>
          <div class="flex space-x-2">
            <button class="p-2 rounded-lg glass hover:bg-primary-500/20 transition-colors duration-200">
              <svg class="w-4 h-4 text-muted-foreground" fill="currentColor" viewBox="0 0 24 24">
                <path d="M24 4.557c-.883.392-1.832.656-2.828.775 1.017-.609 1.798-1.574 2.165-2.724-.951.564-2.005.974-3.127 1.195-.897-.957-2.178-1.555-3.594-1.555-3.179 0-5.515 2.966-4.797 6.045-4.091-.205-7.719-2.165-10.148-5.144-1.29 2.213-.669 5.108 1.523 6.574-.806-.026-1.566-.247-2.229-.616-.054 2.281 1.581 4.415 3.949 4.89-.693.188-1.452.232-2.224.084.626 1.956 2.444 3.379 4.6 3.419-2.07 1.623-4.678 2.348-7.29 2.04 2.179 1.397 4.768 2.212 7.548 2.212 9.142 0 14.307-7.721 13.995-14.646.962-.695 1.797-1.562 2.457-2.549z"/>
              </svg>
            </button>
            <button class="p-2 rounded-lg glass hover:bg-primary-500/20 transition-colors duration-200">
              <svg class="w-4 h-4 text-muted-foreground" fill="currentColor" viewBox="0 0 24 24">
                <path d="M20.317 4.37a19.791 19.791 0 0 0-4.885-1.515.074.074 0 0 0-.079.037c-.21.375-.444.864-.608 1.25a18.27 18.27 0 0 0-5.487 0 12.64 12.64 0 0 0-.617-1.25.077.077 0 0 0-.079-.037A19.736 19.736 0 0 0 3.677 4.37a.07.07 0 0 0-.032.027C.533 9.046-.32 13.58.099 18.057a.082.082 0 0 0 .031.057 19.9 19.9 0 0 0 5.993 3.03.078.078 0 0 0 .084-.028 14.09 14.09 0 0 0 1.226-1.994.076.076 0 0 0-.041-.106 13.107 13.107 0 0 1-1.872-.892.077.077 0 0 1-.008-.128 10.2 10.2 0 0 0 .372-.292.074.074 0 0 1 .077-.01c3.928 1.793 8.18 1.793 12.062 0a.074.074 0 0 1 .078.01c.12.098.246.198.373.292a.077.077 0 0 1-.006.127 12.299 12.299 0 0 1-1.873.892.077.077 0 0 0-.041.107c.36.698.772 1.362 1.225 1.993a.076.076 0 0 0 .084.028 19.839 19.839 0 0 0 6.002-3.03.077.077 0 0 0 .032-.054c.5-5.177-.838-9.674-3.549-13.66a.061.061 0 0 0-.031-.03z"/>
              </svg>
            </button>
          </div>
        </div>

        <!-- Category Badge -->
        <div class="flex items-center space-x-2">
          <span class="text-sm text-muted-foreground">Category:</span>
          <a 
            href={`/category/${frontmatter?.category}`}
            class="px-3 py-1 text-sm font-medium bg-accent-500/20 text-accent-300 rounded-full border border-accent-500/30 hover:bg-accent-500/30 transition-colors duration-200"
          >
            {frontmatter?.category}
          </a>
        </div>
      </div>
    </div>
  </article>

  <!-- Related Switches (Placeholder) -->
  <section class="mt-16 pt-8 border-t border-white/10">
    <h2 class="text-2xl font-bold text-gradient mb-6">Related Switches</h2>
    <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
      <!-- These would be populated dynamically -->
      {[1, 2, 3].map((item) => (
        <div key={item} class="switch-card group cursor-pointer">
          <div class="w-full h-32 bg-gradient-to-br from-primary-500/20 to-accent-500/20 rounded-lg mb-4 flex items-center justify-center">
            <div class="w-12 h-8 bg-gradient-to-br from-primary-400 to-accent-400 rounded shadow-lg"></div>
          </div>
          <h3 class="font-semibold text-foreground group-hover:text-primary-400 transition-colors duration-200">
            Similar Switch #{item}
          </h3>
          <p class="text-sm text-muted-foreground mt-1">Linear • 45g</p>
          <div class="flex items-center space-x-2 mt-2">
            <div class="flex items-center space-x-1">
              {[...Array(5)].map((_, i) => (
                <svg key={i} class={`w-3 h-3 ${i < 4 ? 'text-yellow-400' : 'text-muted-foreground'}`} fill="currentColor" viewBox="0 0 20 20">
                  <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"/>
                </svg>
              ))}
            </div>
            <span class="text-sm font-semibold text-accent-400">8.{item}</span>
          </div>
        </div>
      ))}
    </div>
  </section>
</BaseLayout>

<style>
  /* Enhanced prose styles for article content */
  .prose {
    @apply text-muted-foreground;
  }
  
  .prose h1, .prose h2, .prose h3, .prose h4, .prose h5, .prose h6 {
    @apply text-foreground font-bold;
  }
  
  .prose h2 {
    @apply text-2xl mt-8 mb-4;
    background: linear-gradient(to right, #3A9BDC, #8F6ED5);
    -webkit-background-clip: text;
    background-clip: text;
    -webkit-text-fill-color: transparent;
    color: transparent;
  }
  
  .prose h3 {
    @apply text-xl mt-6 mb-3;
  }
  
  .prose h4 {
    @apply text-lg mt-4 mb-2;
  }
  
  .prose p {
    @apply mb-4 leading-relaxed;
  }
  
  .prose ul, .prose ol {
    @apply mb-4 space-y-2;
  }
  
  .prose li {
    @apply text-muted-foreground;
  }
  
  .prose strong {
    @apply text-foreground font-semibold;
  }
  
  .prose a {
    @apply text-primary-400 hover:text-primary-300 transition-colors duration-200;
  }
  
  .prose blockquote {
    @apply border-l-4 border-primary-500 pl-4 italic text-muted-foreground bg-primary-500/5 py-2 rounded-r-lg;
  }
  
  .prose code {
    @apply bg-input text-primary-300 px-2 py-1 rounded text-sm font-mono;
  }
  
  .prose pre {
    @apply bg-input p-4 rounded-lg overflow-x-auto;
  }
  
  .prose pre code {
    @apply bg-transparent p-0;
  }
</style>