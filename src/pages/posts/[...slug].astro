---
// Dynamic page for rendering content collection entries
import { getCollection } from 'astro:content';
import SwitchReviewLayout from '../../layouts/SwitchReviewLayout.astro';
import BaseLayout from '../../layouts/BaseLayout.astro';

export async function getStaticPaths() {
  // Get all content from all collections
  const [switches, tutorials, news] = await Promise.all([
    getCollection('switches'),
    getCollection('tutorials'),
    getCollection('news')
  ]);
  
  // Combine all entries and create paths
  const allEntries = [
    ...switches.map(entry => ({ ...entry, collection: 'switches' })),
    ...tutorials.map(entry => ({ ...entry, collection: 'tutorials' })),
    ...news.map(entry => ({ ...entry, collection: 'news' }))
  ];

  return allEntries
    .filter(entry => !entry.data.draft) // Filter out draft entries
    .map((entry) => ({
      params: { slug: entry.slug },
      props: { entry },
    }));
}

const { entry } = Astro.props;
const { Content } = await entry.render();

// Determine which layout to use based on collection
const isSwitch = entry.collection === 'switches';
---

{isSwitch ? (
  <SwitchReviewLayout 
    frontmatter={entry.data} 
    heroImage={entry.data.heroImage}
  >
    <Content />
  </SwitchReviewLayout>
) : (
  <BaseLayout 
    title={`${entry.data.title} - Thockverse`}
    description={entry.data.description}
    type="article"
  >
    <article class="max-w-4xl mx-auto">
      <!-- Breadcrumbs -->
      <nav class="breadcrumbs mb-6">
        <div class="flex items-center space-x-2 text-sm text-muted-foreground">
          <a href="/" class="hover:text-primary-400 transition-colors duration-200">Home</a>
          <span class="mx-2">/</span>
          <a href={`/${entry.collection}`} class="hover:text-primary-400 transition-colors duration-200 capitalize">
            {entry.collection}
          </a>
          <span class="mx-2">/</span>
          <span class="text-primary-400">{entry.data.title}</span>
        </div>
      </nav>

      <!-- Article Header -->
      <div class="mb-8 space-y-6">
        {entry.data.heroImage && (
          <div class="relative w-full h-64 sm:h-80 lg:h-96 rounded-2xl overflow-hidden">
            <img 
              src={entry.data.heroImage} 
              alt={entry.data.title}
              class="w-full h-full object-cover"
              loading="eager"
            />
          </div>
        )}

        <div class="space-y-4">
          <h1 class="text-4xl lg:text-5xl font-bold text-gradient leading-tight">
            {entry.data.title}
          </h1>
          
          <p class="text-xl text-muted-foreground leading-relaxed">
            {entry.data.description}
          </p>

          <!-- Meta information -->
          <div class="flex flex-wrap items-center gap-4 text-sm text-muted-foreground">
            <div class="flex items-center space-x-2">
              <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"/>
              </svg>
              <span>By {entry.data.author}</span>
            </div>
            <div class="flex items-center space-x-2">
              <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
              </svg>
              <span>
                {new Date(entry.data.date).toLocaleDateString('en-US', { 
                  year: 'numeric', 
                  month: 'long', 
                  day: 'numeric' 
                })}
              </span>
            </div>
            {entry.data.difficulty && (
              <div class="flex items-center space-x-2">
                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"/>
                </svg>
                <span class="capitalize">{entry.data.difficulty}</span>
              </div>
            )}
            {entry.data.estimatedTime && (
              <div class="flex items-center space-x-2">
                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"/>
                </svg>
                <span>{entry.data.estimatedTime}</span>
              </div>
            )}
          </div>

          <!-- Tags -->
          {entry.data.tags && entry.data.tags.length > 0 && (
            <div class="flex flex-wrap gap-2">
              {entry.data.tags.map((tag) => (
                <span key={tag} class="px-3 py-1 text-xs font-medium bg-primary-500/20 text-primary-300 rounded-full border border-primary-500/30">
                  {tag}
                </span>
              ))}
            </div>
          )}
        </div>
      </div>

      <!-- Article Content -->
      <div class="prose prose-lg prose-invert max-w-none">
        <Content />
      </div>

      <!-- Article Footer -->
      <div class="mt-12 pt-8 border-t border-white/10">
        <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4">
          <!-- Social Sharing -->
          <div class="flex items-center space-x-4">
            <span class="text-sm text-muted-foreground">Share this article:</span>
            <div class="flex space-x-2">
              <button class="p-2 rounded-lg glass hover:bg-primary-500/20 transition-colors duration-200">
                <svg class="w-4 h-4 text-muted-foreground" fill="currentColor" viewBox="0 0 24 24">
                  <path d="M24 4.557c-.883.392-1.832.656-2.828.775 1.017-.609 1.798-1.574 2.165-2.724-.951.564-2.005.974-3.127 1.195-.897-.957-2.178-1.555-3.594-1.555-3.179 0-5.515 2.966-4.797 6.045-4.091-.205-7.719-2.165-10.148-5.144-1.29 2.213-.669 5.108 1.523 6.574-.806-.026-1.566-.247-2.229-.616-.054 2.281 1.581 4.415 3.949 4.89-.693.188-1.452.232-2.224.084.626 1.956 2.444 3.379 4.6 3.419-2.07 1.623-4.678 2.348-7.29 2.04 2.179 1.397 4.768 2.212 7.548 2.212 9.142 0 14.307-7.721 13.995-14.646.962-.695 1.797-1.562 2.457-2.549z"/>
                </svg>
              </button>
              <button class="p-2 rounded-lg glass hover:bg-primary-500/20 transition-colors duration-200">
                <svg class="w-4 h-4 text-muted-foreground" fill="currentColor" viewBox="0 0 24 24">
                  <path d="M20.317 4.37a19.791 19.791 0 0 0-4.885-1.515.074.074 0 0 0-.079.037c-.21.375-.444.864-.608 1.25a18.27 18.27 0 0 0-5.487 0 12.64 12.64 0 0 0-.617-1.25.077.077 0 0 0-.079-.037A19.736 19.736 0 0 0 3.677 4.37a.07.07 0 0 0-.032.027C.533 9.046-.32 13.58.099 18.057a.082.082 0 0 0 .031.057 19.9 19.9 0 0 0 5.993 3.03.078.078 0 0 0 .084-.028 14.09 14.09 0 0 0 1.226-1.994.076.076 0 0 0-.041-.106 13.107 13.107 0 0 1-1.872-.892.077.077 0 0 1-.008-.128 10.2 10.2 0 0 0 .372-.292.074.074 0 0 1 .077-.01c3.928 1.793 8.18 1.793 12.062 0a.074.074 0 0 1 .078.01c.12.098.246.198.373.292a.077.077 0 0 1-.006.127 12.299 12.299 0 0 1-1.873.892.077.077 0 0 0-.041.107c.36.698.772 1.362 1.225 1.993a.076.076 0 0 0 .084.028 19.839 19.839 0 0 0 6.002-3.03.077.077 0 0 0 .032-.054c.5-5.177-.838-9.674-3.549-13.66a.061.061 0 0 0-.031-.03z"/>
                </svg>
              </button>
            </div>
          </div>

          <!-- Category Badge -->
          <div class="flex items-center space-x-2">
            <span class="text-sm text-muted-foreground">Category:</span>
            <a 
              href={`/${entry.collection}`}
              class="px-3 py-1 text-sm font-medium bg-accent-500/20 text-accent-300 rounded-full border border-accent-500/30 hover:bg-accent-500/30 transition-colors duration-200 capitalize"
            >
              {entry.collection}
            </a>
          </div>
        </div>
      </div>
    </article>
  </BaseLayout>
)}

<style>
  /* Enhanced prose styles for article content */
  .prose {
    @apply text-muted-foreground;
  }
  
  .prose h1, .prose h2, .prose h3, .prose h4, .prose h5, .prose h6 {
    @apply text-foreground font-bold;
  }
  
  .prose h2 {
    @apply text-2xl mt-8 mb-4;
    background: linear-gradient(to right, #3A9BDC, #8F6ED5);
    -webkit-background-clip: text;
    background-clip: text;
    -webkit-text-fill-color: transparent;
    color: transparent;
  }
  
  .prose h3 {
    @apply text-xl mt-6 mb-3;
  }
  
  .prose h4 {
    @apply text-lg mt-4 mb-2;
  }
  
  .prose p {
    @apply mb-4 leading-relaxed;
  }
  
  .prose ul, .prose ol {
    @apply mb-4 space-y-2;
  }
  
  .prose li {
    @apply text-muted-foreground;
  }
  
  .prose strong {
    @apply text-foreground font-semibold;
  }
  
  .prose a {
    @apply text-primary-400 hover:text-primary-300 transition-colors duration-200;
  }
  
  .prose blockquote {
    @apply border-l-4 border-primary-500 pl-4 italic text-muted-foreground bg-primary-500/5 py-2 rounded-r-lg;
  }
  
  .prose code {
    @apply bg-input text-primary-300 px-2 py-1 rounded text-sm font-mono;
  }
  
  .prose pre {
    @apply bg-input p-4 rounded-lg overflow-x-auto;
  }
  
  .prose pre code {
    @apply bg-transparent p-0;
  }
</style>