---
// Sidebar.astro - Collapsible sidebar with widgets
interface Props {
  posts?: any[];
  popularSwitches?: any[];
}

const { posts = [], popularSwitches = [] } = Astro.props;

// Sample data for now - will be replaced with real data
const latestPosts = posts.length > 0 ? posts.slice(0, 5) : [
  {
    title: "Cherry MX Blue Review: The Clicky Typing Icon",
    slug: "cherry-mx-blue",
    date: "2025-08-07",
    image: "/images/cherry-mx-blue-thumb.jpg"
  },
  {
    title: "Gateron Oil Kings: The Deep Thock Experience",
    slug: "gateron-oil-kings", 
    date: "2025-08-06",
    image: "/images/gateron-oil-kings-thumb.jpg"
  },
  {
    title: "Holy Panda: The Legendary Tactile Switch",
    slug: "holy-panda",
    date: "2025-08-05",
    image: "/images/holy-panda-thumb.jpg"
  }
];

const topSwitches = popularSwitches.length > 0 ? popularSwitches.slice(0, 6) : [
  {
    name: "Gateron Oil Kings",
    slug: "gateron-oil-kings",
    score: 9.2,
    type: "Linear",
    image: "/images/gateron-oil-kings-icon.jpg"
  },
  {
    name: "Holy Panda",
    slug: "holy-panda", 
    score: 9.0,
    type: "Tactile",
    image: "/images/holy-panda-icon.jpg"
  },
  {
    name: "Cherry MX Blue",
    slug: "cherry-mx-blue",
    score: 8.5,
    type: "Clicky",
    image: "/images/cherry-mx-blue-icon.jpg"
  },
  {
    name: "Alpaca V2",
    slug: "alpaca-v2",
    score: 8.8,
    type: "Linear", 
    image: "/images/alpaca-v2-icon.jpg"
  },
  {
    name: "Zealios V2",
    slug: "zealios-v2",
    score: 8.7,
    type: "Tactile",
    image: "/images/zealios-v2-icon.jpg"
  },
  {
    name: "Tealios V2",
    slug: "tealios-v2",
    score: 8.6,
    type: "Linear",
    image: "/images/tealios-v2-icon.jpg"
  }
];

const categories = [
  { name: "Linear Switches", icon: "üìè", count: 12, color: "text-blue-400" },
  { name: "Tactile Switches", icon: "‚ö°", count: 8, color: "text-purple-400" },
  { name: "Clicky Switches", icon: "üîä", count: 6, color: "text-green-400" },
  { name: "Keyboards", icon: "‚å®Ô∏è", count: 4, color: "text-yellow-400" },
  { name: "Keycaps", icon: "üéØ", count: 3, color: "text-pink-400" },
  { name: "Tutorials", icon: "üìö", count: 7, color: "text-cyan-400" }
];
---

<aside class="w-80 glass-dark p-6 space-y-8 h-fit sticky top-20" id="sidebar">
  <!-- Sidebar Toggle (Mobile) -->
  <button 
    id="sidebar-toggle"
    class="lg:hidden absolute -right-12 top-4 p-2 rounded-r-lg glass-dark hover:bg-white/20 transition-colors duration-200"
    aria-label="Toggle sidebar"
  >
    <svg class="w-5 h-5 transform rotate-0" id="sidebar-arrow" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
    </svg>
  </button>

  <!-- Latest Posts Widget -->
  <div class="space-y-4">
    <div class="flex items-center space-x-2">
      <div class="w-2 h-2 bg-primary-500 rounded-full animate-pulse"></div>
      <h3 class="text-lg font-semibold text-gradient">Latest Posts</h3>
    </div>
    
    <div class="space-y-3">
      {latestPosts.map((post) => (
        <a 
          href={`/posts/${post.slug}`}
          class="flex space-x-3 p-3 rounded-lg hover:bg-white/5 transition-all duration-200 group"
        >
          <!-- Post thumbnail -->
          <div class="flex-shrink-0 w-12 h-12 rounded-lg bg-gradient-to-br from-primary-500/20 to-accent-500/20 flex items-center justify-center overflow-hidden">
            {post.image ? (
              <img 
                src={post.image} 
                alt={post.title}
                class="w-full h-full object-cover"
                loading="lazy"
              />
            ) : (
              <div class="w-6 h-6 bg-gradient-to-br from-primary-400 to-accent-400 rounded"></div>
            )}
          </div>
          
          <div class="flex-1 min-w-0">
            <h4 class="text-sm font-medium text-foreground group-hover:text-primary transition-colors duration-200 line-clamp-2">
              {post.title}
            </h4>
            <p class="text-xs text-muted-foreground mt-1">
              {new Date(post.date).toLocaleDateString('en-US', { 
                month: 'short', 
                day: 'numeric' 
              })}
            </p>
          </div>
        </a>
      ))}
    </div>
    
    <a 
      href="/posts"
      class="inline-flex items-center text-sm text-primary-400 hover:text-primary-300 transition-colors duration-200"
    >
      View all posts
      <svg class="w-4 h-4 ml-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
      </svg>
    </a>
  </div>

  <!-- Popular Switches Widget -->
  <div class="space-y-4">
    <div class="flex items-center space-x-2">
      <div class="w-2 h-2 bg-accent-500 rounded-full animate-pulse"></div>
      <h3 class="text-lg font-semibold bg-gradient-to-r from-accent-400 to-primary-400 bg-clip-text text-transparent">
        Popular Switches
      </h3>
    </div>
    
    <div class="space-y-2">
      {topSwitches.map((switchItem, index) => (
        <a 
          href={`/switches/${switchItem.slug}`}
          class="flex items-center space-x-3 p-3 rounded-lg hover:bg-white/5 transition-all duration-200 group"
        >
          <!-- Rank number -->
          <div class="flex-shrink-0 w-6 h-6 rounded-full bg-gradient-to-br from-accent-500 to-primary-500 flex items-center justify-center text-xs font-bold">
            {index + 1}
          </div>
          
          <!-- Switch icon -->
          <div class="flex-shrink-0 w-8 h-8 rounded bg-muted flex items-center justify-center overflow-hidden">
            {switchItem.image ? (
              <img 
                src={switchItem.image} 
                alt={switchItem.name}
                class="w-full h-full object-cover"
                loading="lazy"
              />
            ) : (
              <div class="w-4 h-3 bg-gradient-to-br from-primary-400 to-accent-400 rounded-sm"></div>
            )}
          </div>
          
          <div class="flex-1 min-w-0">
            <div class="flex items-center justify-between">
              <h4 class="text-sm font-medium text-foreground group-hover:text-primary transition-colors duration-200 truncate">
                {switchItem.name}
              </h4>
              <span class="text-xs font-bold text-secondary">
                {switchItem.score}
              </span>
            </div>
            <p class="text-xs text-muted-foreground">
              {switchItem.type}
            </p>
          </div>
        </a>
      ))}
    </div>
    
    <a 
      href="/switches"
      class="inline-flex items-center text-sm text-accent-400 hover:text-accent-300 transition-colors duration-200"
    >
      View all switches
      <svg class="w-4 h-4 ml-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
      </svg>
    </a>
  </div>

  <!-- Categories Navigation -->
  <div class="space-y-4">
    <div class="flex items-center space-x-2">
      <div class="w-2 h-2 bg-green-500 rounded-full animate-pulse"></div>
      <h3 class="text-lg font-semibold text-foreground">Categories</h3>
    </div>
    
    <nav class="space-y-2">
      {categories.map((category) => (
        <a 
          href={`/category/${category.name.toLowerCase().replace(' ', '-')}`}
          class="flex items-center justify-between p-2 rounded-lg hover:bg-white/5 transition-all duration-200 group"
        >
          <div class="flex items-center space-x-3">
            <span class="text-lg">{category.icon}</span>
            <span class="text-sm font-medium text-foreground group-hover:text-primary transition-colors duration-200">
              {category.name}
            </span>
          </div>
          <span class={`text-xs font-bold ${category.color} px-2 py-1 rounded-full bg-white/10`}>
            {category.count}
          </span>
        </a>
      ))}
    </nav>
  </div>

  <!-- Newsletter Signup -->
  <div class="spec-glow rounded-lg p-4 space-y-3">
    <div class="flex items-center space-x-2">
      <span class="text-lg">üöÄ</span>
      <h3 class="text-sm font-semibold text-foreground">Stay Updated</h3>
    </div>
    <p class="text-xs text-muted-foreground">
      Get the latest switch reviews and keyboard news delivered to your inbox.
    </p>
    <div class="flex space-x-2">
      <input 
        type="email" 
        placeholder="Enter your email"
        class="flex-1 px-3 py-2 text-xs rounded bg-input border border-border text-foreground placeholder-muted-foreground focus-space"
      >
      <button class="px-3 py-2 text-xs font-medium bg-gradient-to-r from-primary-500 to-accent-500 rounded hover:from-primary-400 hover:to-accent-400 transition-all duration-200">
        Join
      </button>
    </div>
  </div>
</aside>

<script>
  // Sidebar toggle functionality for mobile
  const sidebar = document.getElementById('sidebar');
  const sidebarToggle = document.getElementById('sidebar-toggle');
  const sidebarArrow = document.getElementById('sidebar-arrow');
  let sidebarOpen = true;

  function toggleSidebar() {
    sidebarOpen = !sidebarOpen;
    
    if (sidebarOpen) {
      sidebar?.classList.remove('-translate-x-full');
      sidebarArrow?.classList.remove('rotate-180');
    } else {
      sidebar?.classList.add('-translate-x-full');
      sidebarArrow?.classList.add('rotate-180');
    }
  }

  sidebarToggle?.addEventListener('click', toggleSidebar);

  // Auto-hide sidebar on mobile for better UX
  function handleResize() {
    if (window.innerWidth < 1024) {
      sidebar?.classList.add('-translate-x-full');
      sidebarOpen = false;
      sidebarArrow?.classList.add('rotate-180');
    } else {
      sidebar?.classList.remove('-translate-x-full');
      sidebarOpen = true;
      sidebarArrow?.classList.remove('rotate-180');
    }
  }

  // Initialize on page load
  handleResize();
  window.addEventListener('resize', handleResize);

  // Newsletter signup placeholder
  const newsletterForm = sidebar?.querySelector('input[type="email"]')?.parentElement;
  const newsletterButton = newsletterForm?.querySelector('button');
  const newsletterInput = newsletterForm?.querySelector('input');

  newsletterButton?.addEventListener('click', () => {
    const email = newsletterInput?.value;
    if (email && email.includes('@')) {
      newsletterButton.textContent = 'Joined!';
      newsletterButton.style.background = '#10B981';
      setTimeout(() => {
        newsletterButton.textContent = 'Join';
        newsletterButton.style.background = '';
      }, 2000);
    }
  });
</script>

<style>
  /* Sidebar animation */
  #sidebar {
    transition: transform 0.3s ease-in-out;
  }
  
  /* Line clamp utility */
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  /* Custom scrollbar for sidebar content */
  #sidebar {
    scrollbar-width: thin;
    scrollbar-color: rgba(58, 155, 220, 0.3) transparent;
  }
  
  #sidebar::-webkit-scrollbar {
    width: 4px;
  }
  
  #sidebar::-webkit-scrollbar-track {
    background: transparent;
  }
  
  #sidebar::-webkit-scrollbar-thumb {
    background: rgba(58, 155, 220, 0.3);
    border-radius: 2px;
  }
  
  /* Hover effects */
  .group:hover .animate-pulse {
    animation-play-state: paused;
  }
  
  /* Mobile-specific styles */
  @media (max-width: 1023px) {
    #sidebar {
      position: fixed;
      top: 4rem;
      left: 0;
      z-index: 40;
      height: calc(100vh - 4rem);
      overflow-y: auto;
    }
  }
</style>