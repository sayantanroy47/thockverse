---
// Header.astro - Main navigation header with orbiting switch icon
---

<header class="sticky top-0 z-50 backdrop-blur-xl bg-background/80 border-b border-border">
  <div class="max-w-ultra mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex items-center justify-between h-16">
      
      <!-- Logo with Orbiting Switch -->
      <div class="flex items-center space-x-4">
        <a href="/" class="flex items-center space-x-3 group">
          <div class="relative">
            <!-- Main logo text -->
<span class="text-2xl font-bold text-accent">THOCKVERSE</span>
            
            <!-- Orbiting switch icon -->
            <div class="absolute -top-2 -right-2 w-8 h-8">
              <div class="orbital">
                <div class="w-4 h-4 bg-primary rounded shadow-lg stellar-glow">
                  <!-- Switch stem -->
                  <div class="w-2 h-1 bg-white/80 rounded-sm mx-auto mt-1"></div>
                </div>
              </div>
            </div>
          </div>
        </a>
      </div>

      <!-- Professional Clean Navigation -->
      <nav class="hidden md:flex items-center space-x-8">
        <a href="/switches" class="nav-link text-sm font-medium px-3 py-2 rounded-lg hover:bg-primary/10 transition-all duration-200">Switches</a>
        <a href="/keyboards" class="nav-link text-sm font-medium px-3 py-2 rounded-lg hover:bg-primary/10 transition-all duration-200">Keyboards</a>
        <a href="/tutorials" class="nav-link text-sm font-medium px-3 py-2 rounded-lg hover:bg-primary/10 transition-all duration-200">Tutorials</a>
        <a href="/news" class="nav-link text-sm font-medium px-3 py-2 rounded-lg hover:bg-primary/10 transition-all duration-200">News</a>
        <a href="/about" class="nav-link text-sm font-medium px-3 py-2 rounded-lg hover:bg-primary/10 transition-all duration-200">About</a>
      </nav>

      <!-- Search & Theme Toggle -->
      <div class="flex items-center space-x-4">
        
        <!-- Search Bar -->
        <div class="hidden sm:block relative">
          <div class="relative">
            <input 
              type="search" 
              placeholder="Search switches..."
              class="w-64 px-4 py-2 pl-10 pr-4 rounded-lg bg-input border border-border text-foreground placeholder-muted-foreground focus-space"
            >
            <!-- Search Icon -->
            <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
              <svg class="h-5 w-5 text-muted-foreground" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
              </svg>
            </div>
          </div>
        </div>

        <!-- Professional Theme Toggle -->
        <button 
          id="theme-toggle"
          class="theme-toggle relative w-12 h-6 rounded-full border border-gray-600 hover:border-primary transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-primary/30 bg-gray-800"
          aria-label="Toggle dark/light mode"
        >
          <!-- Toggle Handle -->
          <div class="toggle-handle absolute top-0.5 left-0.5 w-5 h-5 rounded-full bg-white shadow-sm transition-transform duration-200 flex items-center justify-center">
            <!-- Sun Icon (Light Mode) -->
            <svg class="sun-icon w-3 h-3 text-yellow-500 opacity-100 transition-opacity duration-200" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z" clip-rule="evenodd" />
            </svg>
            
            <!-- Moon Icon (Dark Mode) -->
            <svg class="moon-icon w-3 h-3 text-gray-400 opacity-0 absolute transition-opacity duration-200" fill="currentColor" viewBox="0 0 20 20">
              <path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z" />
            </svg>
          </div>
          
          <span class="sr-only">Toggle theme</span>
        </button>

        <!-- Mobile Menu Button -->
        <button 
          id="mobile-menu-button"
          class="md:hidden p-2 rounded-lg hover:bg-white/10 transition-colors duration-200"
          aria-label="Open menu"
        >
          <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
          </svg>
        </button>
      </div>
    </div>

    <!-- Mobile Navigation Menu -->
    <div id="mobile-menu" class="md:hidden hidden">
      <div class="px-2 pt-2 pb-3 space-y-1 border-t border-white/10 mt-4">
        <a href="/reviews" class="block px-3 py-2 rounded-md text-base font-medium nav-link">Reviews</a>
        <a href="/switches" class="block px-3 py-2 rounded-md text-base font-medium nav-link">Switches</a>
        <a href="/tutorials" class="block px-3 py-2 rounded-md text-base font-medium nav-link">Tutorials</a>
        <a href="/critical-takes" class="block px-3 py-2 rounded-md text-base font-medium nav-link">Critical Takes</a>
        <a href="/news" class="block px-3 py-2 rounded-md text-base font-medium nav-link">News</a>
        
        <!-- Mobile Search -->
        <div class="pt-4">
          <input 
            type="search" 
            placeholder="Search switches..."
            class="w-full px-4 py-2 rounded-lg bg-input border border-border text-foreground placeholder-muted-foreground focus-space"
          >
        </div>
      </div>
    </div>
  </div>
</header>

<script>
  // Enhanced Theme toggle functionality
  const themeToggle = document.getElementById('theme-toggle');
  const html = document.documentElement;
  
  // Check for saved theme or default to dark
  const savedTheme = localStorage.getItem('theme');
  const currentTheme = savedTheme || 'dark';
  
  // Apply theme with proper toggle state
  function applyTheme(theme) {
    if (theme === 'dark') {
      html.classList.add('dark');
      html.classList.remove('light');
      themeToggle?.classList.add('theme-toggle-active');
    } else {
      html.classList.remove('dark');
      html.classList.add('light');
      themeToggle?.classList.remove('theme-toggle-active');
    }
  }
  
  // Initialize theme
  applyTheme(currentTheme);
  
  // Toggle theme with enhanced animation
  themeToggle?.addEventListener('click', () => {
    const isDark = html.classList.contains('dark');
    
    // Add click animation
    themeToggle.style.transform = 'scale(0.95)';
    setTimeout(() => {
      themeToggle.style.transform = 'scale(1)';
    }, 100);
    
    if (isDark) {
      applyTheme('light');
      localStorage.setItem('theme', 'light');
    } else {
      applyTheme('dark');
      localStorage.setItem('theme', 'dark');
    }
    
    // Create toggle particle effect
    createToggleParticles(themeToggle);
  });
  
  // Enhanced toggle particle effect
  function createToggleParticles(toggle) {
    const rect = toggle.getBoundingClientRect();
    const centerX = rect.left + rect.width / 2;
    const centerY = rect.top + rect.height / 2;
    const isDark = html.classList.contains('dark');
    const color = isDark ? 'rgb(0, 255, 255)' : 'rgb(255, 215, 0)';
    
    for (let i = 0; i < 6; i++) {
      const particle = document.createElement('div');
      const angle = (i / 6) * Math.PI * 2;
      const distance = 15 + Math.random() * 10;
      
      particle.style.cssText = `
        position: fixed;
        left: ${centerX}px;
        top: ${centerY}px;
        width: 3px;
        height: 3px;
        background: ${color};
        border-radius: 50%;
        pointer-events: none;
        z-index: 9999;
        box-shadow: 0 0 8px ${color};
        animation: toggle-particle 0.5s ease-out forwards;
      `;
      
      particle.style.setProperty('--end-x', Math.cos(angle) * distance + 'px');
      particle.style.setProperty('--end-y', Math.sin(angle) * distance + 'px');
      
      document.body.appendChild(particle);
      setTimeout(() => particle.remove(), 500);
    }
  }
  
  // Mobile menu toggle
  const mobileMenuButton = document.getElementById('mobile-menu-button');
  const mobileMenu = document.getElementById('mobile-menu');
  
  mobileMenuButton?.addEventListener('click', () => {
    mobileMenu?.classList.toggle('hidden');
  });

  // Search functionality placeholder
  const searchInputs = document.querySelectorAll('input[type="search"]');
  searchInputs.forEach(input => {
    input.addEventListener('keypress', (e) => {
      if (e.key === 'Enter') {
        const query = input.value;
        if (query.trim()) {
          // Navigate to search results page
          window.location.href = `/search?q=${encodeURIComponent(query)}`;
        }
      }
    });
  });

  // Add current page active state
  const currentPath = window.location.pathname;
  const navLinks = document.querySelectorAll('.nav-link');
  navLinks.forEach(link => {
    if (link.getAttribute('href') === currentPath) {
      link.classList.add('active');
    }
  });

  // Epic neon hover effects for nav links
  document.querySelectorAll('.hover-glow').forEach(link => {
    link.addEventListener('mouseenter', () => {
      const neonType = link.dataset.neon;
      link.classList.add(`neon-${neonType}`, 'neon-glow');
    });
    
    link.addEventListener('mouseleave', () => {
      const neonType = link.dataset.neon;
      link.classList.remove(`neon-${neonType}`, 'neon-glow');
    });
  });

  // Glitch effect for logo
  document.querySelectorAll('.glitch-on-hover').forEach(element => {
    element.addEventListener('mouseenter', () => {
      element.classList.add('glitch');
      setTimeout(() => element.classList.remove('glitch'), 600);
    });
  });

  // Enhanced search with neon focus
  searchInputs.forEach(input => {
    input.addEventListener('focus', () => {
      input.classList.add('neon-cyan', 'neon-glow');
    });
    
    input.addEventListener('blur', () => {
      input.classList.remove('neon-cyan', 'neon-glow');
    });
  });

  // Particle trail for theme toggle
  document.getElementById('theme-toggle')?.addEventListener('click', (e) => {
    createParticleExplosion(e.target);
  });

  function createParticleExplosion(element) {
    const rect = element.getBoundingClientRect();
    const centerX = rect.left + rect.width / 2;
    const centerY = rect.top + rect.height / 2;
    
    for (let i = 0; i < 12; i++) {
      const particle = document.createElement('div');
      const angle = (i / 12) * Math.PI * 2;
      const distance = 30 + Math.random() * 20;
      
      particle.style.cssText = `
        position: fixed;
        left: ${centerX}px;
        top: ${centerY}px;
        width: 3px;
        height: 3px;
        background: rgb(${Math.random() > 0.5 ? '0, 255, 255' : '255, 20, 147'});
        border-radius: 50%;
        pointer-events: none;
        z-index: 9999;
        animation: particle-explosion 0.8s ease-out forwards;
        transform-origin: center;
      `;
      
      particle.style.setProperty('--end-x', Math.cos(angle) * distance + 'px');
      particle.style.setProperty('--end-y', Math.sin(angle) * distance + 'px');
      
      document.body.appendChild(particle);
      setTimeout(() => particle.remove(), 800);
    }
  }
</script>

<style>
  /* Enhanced orbital animation with neon trail */
  @keyframes orbit {
    0% { 
      transform: rotate(0deg) translateX(16px) rotate(0deg); 
      filter: drop-shadow(0 0 5px rgba(0, 255, 255, 0.5));
    }
    25% { 
      filter: drop-shadow(0 0 8px rgba(255, 20, 147, 0.6));
    }
    50% { 
      filter: drop-shadow(0 0 6px rgba(57, 255, 20, 0.5));
    }
    75% { 
      filter: drop-shadow(0 0 7px rgba(255, 255, 0, 0.4));
    }
    100% { 
      transform: rotate(360deg) translateX(16px) rotate(-360deg);
      filter: drop-shadow(0 0 5px rgba(0, 255, 255, 0.5));
    }
  }
  
  .orbital {
    animation: none;
    transition: transform 0.3s ease;
  }
  
  /* Logo hover effect - trigger orbital animation */
  .group:hover .orbital {
    animation: orbit 2s linear infinite;
    filter: drop-shadow(0 0 15px rgba(0, 255, 255, 0.8)) drop-shadow(0 0 25px rgba(255, 20, 147, 0.4));
  }
  
  /* Epic glitch effect for logo */
  @keyframes logo-glitch {
    0% { 
      transform: translateX(0); 
      text-shadow: none;
    }
    10% { 
      transform: translateX(-3px) skewX(2deg); 
      text-shadow: 2px 0 0 rgba(0, 255, 255, 0.8), -2px 0 0 rgba(255, 20, 147, 0.8);
    }
    20% { 
      transform: translateX(3px) skewX(-2deg); 
      text-shadow: -2px 0 0 rgba(57, 255, 20, 0.8), 2px 0 0 rgba(255, 255, 0, 0.8);
    }
    30% { 
      transform: translateX(-2px) skewX(1deg); 
      text-shadow: 1px 0 0 rgba(0, 255, 255, 0.6);
    }
    40% { 
      transform: translateX(2px) skewX(-1deg); 
      text-shadow: -1px 0 0 rgba(255, 20, 147, 0.6);
    }
    50% { 
      transform: translateX(-1px); 
      text-shadow: 1px 0 0 rgba(57, 255, 20, 0.4);
    }
    60% { 
      transform: translateX(1px); 
      text-shadow: -1px 0 0 rgba(255, 255, 0, 0.4);
    }
    70% { 
      transform: translateX(-0.5px) skewX(0.5deg); 
    }
    80% { 
      transform: translateX(0.5px) skewX(-0.5deg); 
    }
    90% { 
      transform: translateX(-0.25px); 
    }
    100% { 
      transform: translateX(0); 
      text-shadow: none;
    }
  }
  
  .glitch {
    animation: logo-glitch 0.6s ease-in-out;
  }
  
  /* Proper Toggle Switch Styles */
  .theme-toggle {
    background: rgba(25, 30, 40, 0.8);
    border: 1px solid rgba(64, 224, 255, 0.2);
  }

  .theme-toggle:hover {
    border-color: rgba(64, 224, 255, 0.4);
    box-shadow: 0 0 20px rgba(64, 224, 255, 0.1);
  }

  .dark .theme-toggle {
    background: rgba(15, 18, 25, 0.9);
    border-color: rgba(0, 255, 255, 0.3);
  }

  .dark .theme-toggle:hover {
    border-color: rgba(0, 255, 255, 0.5);
    box-shadow: 0 0 25px rgba(0, 255, 255, 0.2);
  }

  /* Toggle Track */
  .toggle-track {
    background: linear-gradient(135deg, rgba(255, 165, 0, 0.1), rgba(255, 215, 0, 0.2));
    border-color: rgba(255, 165, 0, 0.3);
  }

  .dark .toggle-track {
    background: linear-gradient(135deg, rgba(0, 255, 255, 0.1), rgba(64, 224, 255, 0.2));
    border-color: rgba(0, 255, 255, 0.3);
  }

  /* Ultra-minimal toggle handle */
  .dark .toggle-handle {
    transform: translateX(22px);
  }

  .theme-toggle-active .toggle-handle {
    transform: translateX(22px);
  }

  .theme-toggle-active.dark .toggle-handle {
    transform: translateX(0);
  }

  /* Ultra Thick Mega Menu Styles */
  .mega-menu-container:hover .mega-menu {
    opacity: 1;
    visibility: visible;
    transform: translateY(0);
  }

  .mega-menu-container:hover .mega-menu-trigger svg {
    transform: rotate(180deg);
  }

  .mega-menu {
    backdrop-filter: blur(20px);
    box-shadow: 
      0 25px 50px rgba(0, 0, 0, 0.5),
      0 0 50px rgba(64, 224, 255, 0.1),
      inset 0 1px 0 rgba(255, 255, 255, 0.1);
  }

  .mega-menu-link {
    transition: all 0.2s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  }

  .mega-menu-link:hover {
    background: rgba(64, 224, 255, 0.1);
    border-left: 3px solid rgba(64, 224, 255, 0.5);
    transform: translateX(4px);
    box-shadow: 0 0 20px rgba(64, 224, 255, 0.2);
  }

  .mega-menu-featured {
    transition: all 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  }

  .mega-menu-featured:hover {
    transform: translateY(-2px) scale(1.02);
    box-shadow: 
      0 10px 25px rgba(0, 0, 0, 0.3),
      0 0 20px rgba(64, 224, 255, 0.2);
  }

  /* Staggered animation for mega menu items */
  .mega-menu-container:hover .mega-menu-link:nth-child(1) { animation-delay: 0.05s; }
  .mega-menu-container:hover .mega-menu-link:nth-child(2) { animation-delay: 0.1s; }
  .mega-menu-container:hover .mega-menu-link:nth-child(3) { animation-delay: 0.15s; }
  .mega-menu-container:hover .mega-menu-link:nth-child(4) { animation-delay: 0.2s; }

  @keyframes mega-menu-reveal {
    0% {
      opacity: 0;
      transform: translateY(10px);
    }
    100% {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .mega-menu-container:hover .mega-menu-link {
    animation: mega-menu-reveal 0.3s ease-out forwards;
  }
  
  /* Enhanced mobile menu with neon border */
  #mobile-menu {
    animation: slide-down 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    border-top: 2px solid rgba(0, 255, 255, 0.3);
    background: linear-gradient(145deg, rgba(13, 11, 26, 0.95), rgba(20, 18, 35, 0.95));
  }
  
  #mobile-menu.hidden {
    animation: slide-up 0.3s cubic-bezier(0.55, 0.055, 0.675, 0.19);
  }
  
  @keyframes slide-down {
    0% {
      opacity: 0;
      transform: translateY(-20px);
    }
    100% {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  @keyframes slide-up {
    0% {
      opacity: 1;
      transform: translateY(0);
    }
    100% {
      opacity: 0;
      transform: translateY(-20px);
    }
  }
  
  /* Particle explosion animation */
  @keyframes particle-explosion {
    0% {
      opacity: 1;
      transform: translate(0, 0) scale(1);
    }
    100% {
      opacity: 0;
      transform: translate(var(--end-x), var(--end-y)) scale(0);
    }
  }
  
  /* Toggle particle animation */
  @keyframes toggle-particle {
    0% {
      opacity: 1;
      transform: translate(0, 0) scale(1);
    }
    100% {
      opacity: 0;
      transform: translate(var(--end-x), var(--end-y)) scale(0);
    }
  }
  
  /* Hover glow effects for nav links */
  .nav-link {
    position: relative;
    transition: all 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  }
  
  .nav-link:hover {
    transform: translateY(-2px);
  }
  
  /* Enhanced text gradient - hover triggered */
  .text-gradient {
    background: linear-gradient(45deg, 
      rgb(0, 255, 255) 0%, 
      rgb(255, 20, 147) 25%, 
      rgb(57, 255, 20) 50%, 
      rgb(255, 255, 0) 75%, 
      rgb(138, 43, 226) 100%
    );
    background-size: 300% 300%;
    -webkit-background-clip: text;
    background-clip: text;
    -webkit-text-fill-color: transparent;
    color: transparent;
    animation: none;
    transition: background-position 0.3s ease;
  }
  
  .text-gradient:hover {
    animation: epic-gradient 4s ease-in-out infinite;
  }
  
  @keyframes epic-gradient {
    0%, 100% { background-position: 0% 50%; }
    25% { background-position: 50% 0%; }
    50% { background-position: 100% 50%; }
    75% { background-position: 50% 100%; }
  }
</style>